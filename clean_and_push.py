#!/usr/bin/env python3
import subprocess
import os

print("üßπ PULIZIA E PUSH FINALE")
print("=" * 50)

# 1. Rimuovi file temporanei
print("\n1Ô∏è‚É£ Pulizia file temporanei:")
temp_files = [
    'fix_duplicate_run.py',
    'fix_all_complete.py',
    'check_and_clean_conflicts.py',
    'check_deploy_status.py',
    'debug_bot_issues.py'
]

for file in temp_files:
    if os.path.exists(file):
        try:
            os.remove(file)
            print(f"   ‚úÖ Rimosso {file}")
        except:
            print(f"   ‚ö†Ô∏è Non posso rimuovere {file}")

# 2. Git status
print("\n2Ô∏è‚É£ Stato git:")
result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True)
if result.stdout:
    print(result.stdout)
else:
    print("‚úÖ Working directory pulita")

# 3. Aggiungi tutto e committa
print("\n3Ô∏è‚É£ Commit finale:")
subprocess.run("git add -A", shell=True)
subprocess.run('git commit -m "chore: pulizia file temporanei e fix finali"', shell=True)

# 4. Push
print("\n4Ô∏è‚É£ Push su Railway:")
result = subprocess.run("git push origin main", shell=True, capture_output=True, text=True)
if result.returncode == 0:
    print("‚úÖ Push completato!")
else:
    print("‚ÑπÔ∏è Nulla da pushare o gi√† aggiornato")

print("\n" + "=" * 50)
print("‚úÖ PULIZIA COMPLETATA!")
print("\nüöÇ Railway sta facendo il deploy...")
print("‚è∞ Attendi 2-3 minuti poi testa con:")
print("\n   python3 test_bot_connection.py")

# Auto-elimina
os.remove(__file__)
print("\nüóëÔ∏è Script auto-eliminato")
